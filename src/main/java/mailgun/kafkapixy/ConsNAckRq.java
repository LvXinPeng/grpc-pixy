// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafkapixy.proto

package mailgun.kafkapixy;

/**
 * Protobuf type {@code ConsNAckRq}
 */
public final class ConsNAckRq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ConsNAckRq)
    ConsNAckRqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ConsNAckRq.newBuilder() to construct.
  private ConsNAckRq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ConsNAckRq() {
    cluster_ = "";
    topic_ = "";
    group_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ConsNAckRq();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ConsNAckRq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            cluster_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            topic_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            group_ = s;
            break;
          }
          case 32: {

            noAck_ = input.readBool();
            break;
          }
          case 40: {

            autoAck_ = input.readBool();
            break;
          }
          case 48: {

            ackPartition_ = input.readInt32();
            break;
          }
          case 56: {

            ackOffset_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return mailgun.kafkapixy.KafkaPixyProto.internal_static_ConsNAckRq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return mailgun.kafkapixy.KafkaPixyProto.internal_static_ConsNAckRq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            mailgun.kafkapixy.ConsNAckRq.class, mailgun.kafkapixy.ConsNAckRq.Builder.class);
  }

  public static final int CLUSTER_FIELD_NUMBER = 1;
  private volatile java.lang.Object cluster_;
  /**
   * <pre>
   * Name of a Kafka cluster to operate on.
   * </pre>
   *
   * <code>string cluster = 1;</code>
   * @return The cluster.
   */
  @java.lang.Override
  public java.lang.String getCluster() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of a Kafka cluster to operate on.
   * </pre>
   *
   * <code>string cluster = 1;</code>
   * @return The bytes for cluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClusterBytes() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOPIC_FIELD_NUMBER = 2;
  private volatile java.lang.Object topic_;
  /**
   * <pre>
   * Name of a topic to produce to.
   * </pre>
   *
   * <code>string topic = 2;</code>
   * @return The topic.
   */
  @java.lang.Override
  public java.lang.String getTopic() {
    java.lang.Object ref = topic_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      topic_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of a topic to produce to.
   * </pre>
   *
   * <code>string topic = 2;</code>
   * @return The bytes for topic.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTopicBytes() {
    java.lang.Object ref = topic_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      topic_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GROUP_FIELD_NUMBER = 3;
  private volatile java.lang.Object group_;
  /**
   * <pre>
   * Name of a consumer group.
   * </pre>
   *
   * <code>string group = 3;</code>
   * @return The group.
   */
  @java.lang.Override
  public java.lang.String getGroup() {
    java.lang.Object ref = group_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      group_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of a consumer group.
   * </pre>
   *
   * <code>string group = 3;</code>
   * @return The bytes for group.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGroupBytes() {
    java.lang.Object ref = group_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      group_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NO_ACK_FIELD_NUMBER = 4;
  private boolean noAck_;
  /**
   * <pre>
   * If true then no message is acknowledged by the request.
   * </pre>
   *
   * <code>bool no_ack = 4;</code>
   * @return The noAck.
   */
  @java.lang.Override
  public boolean getNoAck() {
    return noAck_;
  }

  public static final int AUTO_ACK_FIELD_NUMBER = 5;
  private boolean autoAck_;
  /**
   * <pre>
   * If true and no_ack is false then the message returned by the requests is
   * automatically acknowledged by Kafka-Pixy before the request completes.
   * </pre>
   *
   * <code>bool auto_ack = 5;</code>
   * @return The autoAck.
   */
  @java.lang.Override
  public boolean getAutoAck() {
    return autoAck_;
  }

  public static final int ACK_PARTITION_FIELD_NUMBER = 6;
  private int ackPartition_;
  /**
   * <pre>
   * If both no_ack and auto_ack are false (by default), then ack_partition
   * and ack_offset along with cluster-group-topic determine the message that
   * should be acknowledged by the request.
   * </pre>
   *
   * <code>int32 ack_partition = 6;</code>
   * @return The ackPartition.
   */
  @java.lang.Override
  public int getAckPartition() {
    return ackPartition_;
  }

  public static final int ACK_OFFSET_FIELD_NUMBER = 7;
  private long ackOffset_;
  /**
   * <code>int64 ack_offset = 7;</code>
   * @return The ackOffset.
   */
  @java.lang.Override
  public long getAckOffset() {
    return ackOffset_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getClusterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cluster_);
    }
    if (!getTopicBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, topic_);
    }
    if (!getGroupBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, group_);
    }
    if (noAck_ != false) {
      output.writeBool(4, noAck_);
    }
    if (autoAck_ != false) {
      output.writeBool(5, autoAck_);
    }
    if (ackPartition_ != 0) {
      output.writeInt32(6, ackPartition_);
    }
    if (ackOffset_ != 0L) {
      output.writeInt64(7, ackOffset_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getClusterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cluster_);
    }
    if (!getTopicBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, topic_);
    }
    if (!getGroupBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, group_);
    }
    if (noAck_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, noAck_);
    }
    if (autoAck_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, autoAck_);
    }
    if (ackPartition_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, ackPartition_);
    }
    if (ackOffset_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(7, ackOffset_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof mailgun.kafkapixy.ConsNAckRq)) {
      return super.equals(obj);
    }
    mailgun.kafkapixy.ConsNAckRq other = (mailgun.kafkapixy.ConsNAckRq) obj;

    if (!getCluster()
        .equals(other.getCluster())) return false;
    if (!getTopic()
        .equals(other.getTopic())) return false;
    if (!getGroup()
        .equals(other.getGroup())) return false;
    if (getNoAck()
        != other.getNoAck()) return false;
    if (getAutoAck()
        != other.getAutoAck()) return false;
    if (getAckPartition()
        != other.getAckPartition()) return false;
    if (getAckOffset()
        != other.getAckOffset()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getCluster().hashCode();
    hash = (37 * hash) + TOPIC_FIELD_NUMBER;
    hash = (53 * hash) + getTopic().hashCode();
    hash = (37 * hash) + GROUP_FIELD_NUMBER;
    hash = (53 * hash) + getGroup().hashCode();
    hash = (37 * hash) + NO_ACK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNoAck());
    hash = (37 * hash) + AUTO_ACK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAutoAck());
    hash = (37 * hash) + ACK_PARTITION_FIELD_NUMBER;
    hash = (53 * hash) + getAckPartition();
    hash = (37 * hash) + ACK_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getAckOffset());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ConsNAckRq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(mailgun.kafkapixy.ConsNAckRq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ConsNAckRq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ConsNAckRq)
      mailgun.kafkapixy.ConsNAckRqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ConsNAckRq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ConsNAckRq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mailgun.kafkapixy.ConsNAckRq.class, mailgun.kafkapixy.ConsNAckRq.Builder.class);
    }

    // Construct using mailgun.kafkapixy.ConsNAckRq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cluster_ = "";

      topic_ = "";

      group_ = "";

      noAck_ = false;

      autoAck_ = false;

      ackPartition_ = 0;

      ackOffset_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ConsNAckRq_descriptor;
    }

    @java.lang.Override
    public mailgun.kafkapixy.ConsNAckRq getDefaultInstanceForType() {
      return mailgun.kafkapixy.ConsNAckRq.getDefaultInstance();
    }

    @java.lang.Override
    public mailgun.kafkapixy.ConsNAckRq build() {
      mailgun.kafkapixy.ConsNAckRq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public mailgun.kafkapixy.ConsNAckRq buildPartial() {
      mailgun.kafkapixy.ConsNAckRq result = new mailgun.kafkapixy.ConsNAckRq(this);
      result.cluster_ = cluster_;
      result.topic_ = topic_;
      result.group_ = group_;
      result.noAck_ = noAck_;
      result.autoAck_ = autoAck_;
      result.ackPartition_ = ackPartition_;
      result.ackOffset_ = ackOffset_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof mailgun.kafkapixy.ConsNAckRq) {
        return mergeFrom((mailgun.kafkapixy.ConsNAckRq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(mailgun.kafkapixy.ConsNAckRq other) {
      if (other == mailgun.kafkapixy.ConsNAckRq.getDefaultInstance()) return this;
      if (!other.getCluster().isEmpty()) {
        cluster_ = other.cluster_;
        onChanged();
      }
      if (!other.getTopic().isEmpty()) {
        topic_ = other.topic_;
        onChanged();
      }
      if (!other.getGroup().isEmpty()) {
        group_ = other.group_;
        onChanged();
      }
      if (other.getNoAck() != false) {
        setNoAck(other.getNoAck());
      }
      if (other.getAutoAck() != false) {
        setAutoAck(other.getAutoAck());
      }
      if (other.getAckPartition() != 0) {
        setAckPartition(other.getAckPartition());
      }
      if (other.getAckOffset() != 0L) {
        setAckOffset(other.getAckOffset());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      mailgun.kafkapixy.ConsNAckRq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (mailgun.kafkapixy.ConsNAckRq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object cluster_ = "";
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return The cluster.
     */
    public java.lang.String getCluster() {
      java.lang.Object ref = cluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return The bytes for cluster.
     */
    public com.google.protobuf.ByteString
        getClusterBytes() {
      java.lang.Object ref = cluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @param value The cluster to set.
     * @return This builder for chaining.
     */
    public Builder setCluster(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cluster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCluster() {
      
      cluster_ = getDefaultInstance().getCluster();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @param value The bytes for cluster to set.
     * @return This builder for chaining.
     */
    public Builder setClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cluster_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object topic_ = "";
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The topic.
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The bytes for topic.
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @param value The topic to set.
     * @return This builder for chaining.
     */
    public Builder setTopic(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      topic_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopic() {
      
      topic_ = getDefaultInstance().getTopic();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @param value The bytes for topic to set.
     * @return This builder for chaining.
     */
    public Builder setTopicBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      topic_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object group_ = "";
    /**
     * <pre>
     * Name of a consumer group.
     * </pre>
     *
     * <code>string group = 3;</code>
     * @return The group.
     */
    public java.lang.String getGroup() {
      java.lang.Object ref = group_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        group_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of a consumer group.
     * </pre>
     *
     * <code>string group = 3;</code>
     * @return The bytes for group.
     */
    public com.google.protobuf.ByteString
        getGroupBytes() {
      java.lang.Object ref = group_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        group_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of a consumer group.
     * </pre>
     *
     * <code>string group = 3;</code>
     * @param value The group to set.
     * @return This builder for chaining.
     */
    public Builder setGroup(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      group_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a consumer group.
     * </pre>
     *
     * <code>string group = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearGroup() {
      
      group_ = getDefaultInstance().getGroup();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a consumer group.
     * </pre>
     *
     * <code>string group = 3;</code>
     * @param value The bytes for group to set.
     * @return This builder for chaining.
     */
    public Builder setGroupBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      group_ = value;
      onChanged();
      return this;
    }

    private boolean noAck_ ;
    /**
     * <pre>
     * If true then no message is acknowledged by the request.
     * </pre>
     *
     * <code>bool no_ack = 4;</code>
     * @return The noAck.
     */
    @java.lang.Override
    public boolean getNoAck() {
      return noAck_;
    }
    /**
     * <pre>
     * If true then no message is acknowledged by the request.
     * </pre>
     *
     * <code>bool no_ack = 4;</code>
     * @param value The noAck to set.
     * @return This builder for chaining.
     */
    public Builder setNoAck(boolean value) {
      
      noAck_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true then no message is acknowledged by the request.
     * </pre>
     *
     * <code>bool no_ack = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNoAck() {
      
      noAck_ = false;
      onChanged();
      return this;
    }

    private boolean autoAck_ ;
    /**
     * <pre>
     * If true and no_ack is false then the message returned by the requests is
     * automatically acknowledged by Kafka-Pixy before the request completes.
     * </pre>
     *
     * <code>bool auto_ack = 5;</code>
     * @return The autoAck.
     */
    @java.lang.Override
    public boolean getAutoAck() {
      return autoAck_;
    }
    /**
     * <pre>
     * If true and no_ack is false then the message returned by the requests is
     * automatically acknowledged by Kafka-Pixy before the request completes.
     * </pre>
     *
     * <code>bool auto_ack = 5;</code>
     * @param value The autoAck to set.
     * @return This builder for chaining.
     */
    public Builder setAutoAck(boolean value) {
      
      autoAck_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true and no_ack is false then the message returned by the requests is
     * automatically acknowledged by Kafka-Pixy before the request completes.
     * </pre>
     *
     * <code>bool auto_ack = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAutoAck() {
      
      autoAck_ = false;
      onChanged();
      return this;
    }

    private int ackPartition_ ;
    /**
     * <pre>
     * If both no_ack and auto_ack are false (by default), then ack_partition
     * and ack_offset along with cluster-group-topic determine the message that
     * should be acknowledged by the request.
     * </pre>
     *
     * <code>int32 ack_partition = 6;</code>
     * @return The ackPartition.
     */
    @java.lang.Override
    public int getAckPartition() {
      return ackPartition_;
    }
    /**
     * <pre>
     * If both no_ack and auto_ack are false (by default), then ack_partition
     * and ack_offset along with cluster-group-topic determine the message that
     * should be acknowledged by the request.
     * </pre>
     *
     * <code>int32 ack_partition = 6;</code>
     * @param value The ackPartition to set.
     * @return This builder for chaining.
     */
    public Builder setAckPartition(int value) {
      
      ackPartition_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If both no_ack and auto_ack are false (by default), then ack_partition
     * and ack_offset along with cluster-group-topic determine the message that
     * should be acknowledged by the request.
     * </pre>
     *
     * <code>int32 ack_partition = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearAckPartition() {
      
      ackPartition_ = 0;
      onChanged();
      return this;
    }

    private long ackOffset_ ;
    /**
     * <code>int64 ack_offset = 7;</code>
     * @return The ackOffset.
     */
    @java.lang.Override
    public long getAckOffset() {
      return ackOffset_;
    }
    /**
     * <code>int64 ack_offset = 7;</code>
     * @param value The ackOffset to set.
     * @return This builder for chaining.
     */
    public Builder setAckOffset(long value) {
      
      ackOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 ack_offset = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearAckOffset() {
      
      ackOffset_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ConsNAckRq)
  }

  // @@protoc_insertion_point(class_scope:ConsNAckRq)
  private static final mailgun.kafkapixy.ConsNAckRq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new mailgun.kafkapixy.ConsNAckRq();
  }

  public static mailgun.kafkapixy.ConsNAckRq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ConsNAckRq>
      PARSER = new com.google.protobuf.AbstractParser<ConsNAckRq>() {
    @java.lang.Override
    public ConsNAckRq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ConsNAckRq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ConsNAckRq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ConsNAckRq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public mailgun.kafkapixy.ConsNAckRq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

