// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafkapixy.proto

package mailgun.kafkapixy;

/**
 * Protobuf type {@code ProdRq}
 */
public final class ProdRq extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ProdRq)
    ProdRqOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ProdRq.newBuilder() to construct.
  private ProdRq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ProdRq() {
    cluster_ = "";
    topic_ = "";
    keyValue_ = com.google.protobuf.ByteString.EMPTY;
    message_ = com.google.protobuf.ByteString.EMPTY;
    headers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ProdRq();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ProdRq(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            cluster_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            topic_ = s;
            break;
          }
          case 26: {

            keyValue_ = input.readBytes();
            break;
          }
          case 32: {

            keyUndefined_ = input.readBool();
            break;
          }
          case 42: {

            message_ = input.readBytes();
            break;
          }
          case 48: {

            asyncMode_ = input.readBool();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              headers_ = new java.util.ArrayList<mailgun.kafkapixy.RecordHeader>();
              mutable_bitField0_ |= 0x00000001;
            }
            headers_.add(
                input.readMessage(mailgun.kafkapixy.RecordHeader.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        headers_ = java.util.Collections.unmodifiableList(headers_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return mailgun.kafkapixy.KafkaPixyProto.internal_static_ProdRq_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return mailgun.kafkapixy.KafkaPixyProto.internal_static_ProdRq_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            mailgun.kafkapixy.ProdRq.class, mailgun.kafkapixy.ProdRq.Builder.class);
  }

  public static final int CLUSTER_FIELD_NUMBER = 1;
  private volatile java.lang.Object cluster_;
  /**
   * <pre>
   * Name of a Kafka cluster to operate on.
   * </pre>
   *
   * <code>string cluster = 1;</code>
   * @return The cluster.
   */
  @java.lang.Override
  public java.lang.String getCluster() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cluster_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of a Kafka cluster to operate on.
   * </pre>
   *
   * <code>string cluster = 1;</code>
   * @return The bytes for cluster.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClusterBytes() {
    java.lang.Object ref = cluster_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cluster_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TOPIC_FIELD_NUMBER = 2;
  private volatile java.lang.Object topic_;
  /**
   * <pre>
   * Name of a topic to produce to.
   * </pre>
   *
   * <code>string topic = 2;</code>
   * @return The topic.
   */
  @java.lang.Override
  public java.lang.String getTopic() {
    java.lang.Object ref = topic_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      topic_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of a topic to produce to.
   * </pre>
   *
   * <code>string topic = 2;</code>
   * @return The bytes for topic.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTopicBytes() {
    java.lang.Object ref = topic_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      topic_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEY_VALUE_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString keyValue_;
  /**
   * <pre>
   * Hash of the key is used to determine the partition to produce to. By
   * default it is an empty array which is a valid key, unless key_undefined
   * is set to true and then a random partition is selected.
   * </pre>
   *
   * <code>bytes key_value = 3;</code>
   * @return The keyValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKeyValue() {
    return keyValue_;
  }

  public static final int KEY_UNDEFINED_FIELD_NUMBER = 4;
  private boolean keyUndefined_;
  /**
   * <pre>
   * If true then the message is written to a random partition, otherwise
   * hash of key_value is used to determine the partition.
   * </pre>
   *
   * <code>bool key_undefined = 4;</code>
   * @return The keyUndefined.
   */
  @java.lang.Override
  public boolean getKeyUndefined() {
    return keyUndefined_;
  }

  public static final int MESSAGE_FIELD_NUMBER = 5;
  private com.google.protobuf.ByteString message_;
  /**
   * <pre>
   * Message body.
   * </pre>
   *
   * <code>bytes message = 5;</code>
   * @return The message.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getMessage() {
    return message_;
  }

  public static final int ASYNC_MODE_FIELD_NUMBER = 6;
  private boolean asyncMode_;
  /**
   * <pre>
   * If true then the method returns immediately after Kafka-Pixy gets the
   * produce request, and the message is written to Kafka asynchronously.
   * In that case partition and offset returned in response should be ignored.
   * If false, then a response is returned in accordance with the
   * producer.required_acks parameter, that can be one of:
   *  * no_response:    the response is returned as soon as a produce request
   *                    is delivered to a partition leader Kafka broker.
   *  * wait_for_local: the response is returned as soon as data is written
   *                    to the disk by a partition leader Kafka broker.
   *  * wait_for_all:   the response is returned after all in-sync replicas
   *                    have data committed to disk.
   * </pre>
   *
   * <code>bool async_mode = 6;</code>
   * @return The asyncMode.
   */
  @java.lang.Override
  public boolean getAsyncMode() {
    return asyncMode_;
  }

  public static final int HEADERS_FIELD_NUMBER = 7;
  private java.util.List<mailgun.kafkapixy.RecordHeader> headers_;
  /**
   * <pre>
   * Headers to include with the published message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 7;</code>
   */
  @java.lang.Override
  public java.util.List<mailgun.kafkapixy.RecordHeader> getHeadersList() {
    return headers_;
  }
  /**
   * <pre>
   * Headers to include with the published message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 7;</code>
   */
  @java.lang.Override
  public java.util.List<? extends mailgun.kafkapixy.RecordHeaderOrBuilder> 
      getHeadersOrBuilderList() {
    return headers_;
  }
  /**
   * <pre>
   * Headers to include with the published message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 7;</code>
   */
  @java.lang.Override
  public int getHeadersCount() {
    return headers_.size();
  }
  /**
   * <pre>
   * Headers to include with the published message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 7;</code>
   */
  @java.lang.Override
  public mailgun.kafkapixy.RecordHeader getHeaders(int index) {
    return headers_.get(index);
  }
  /**
   * <pre>
   * Headers to include with the published message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 7;</code>
   */
  @java.lang.Override
  public mailgun.kafkapixy.RecordHeaderOrBuilder getHeadersOrBuilder(
      int index) {
    return headers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getClusterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cluster_);
    }
    if (!getTopicBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, topic_);
    }
    if (!keyValue_.isEmpty()) {
      output.writeBytes(3, keyValue_);
    }
    if (keyUndefined_ != false) {
      output.writeBool(4, keyUndefined_);
    }
    if (!message_.isEmpty()) {
      output.writeBytes(5, message_);
    }
    if (asyncMode_ != false) {
      output.writeBool(6, asyncMode_);
    }
    for (int i = 0; i < headers_.size(); i++) {
      output.writeMessage(7, headers_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getClusterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cluster_);
    }
    if (!getTopicBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, topic_);
    }
    if (!keyValue_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, keyValue_);
    }
    if (keyUndefined_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, keyUndefined_);
    }
    if (!message_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(5, message_);
    }
    if (asyncMode_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, asyncMode_);
    }
    for (int i = 0; i < headers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, headers_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof mailgun.kafkapixy.ProdRq)) {
      return super.equals(obj);
    }
    mailgun.kafkapixy.ProdRq other = (mailgun.kafkapixy.ProdRq) obj;

    if (!getCluster()
        .equals(other.getCluster())) return false;
    if (!getTopic()
        .equals(other.getTopic())) return false;
    if (!getKeyValue()
        .equals(other.getKeyValue())) return false;
    if (getKeyUndefined()
        != other.getKeyUndefined()) return false;
    if (!getMessage()
        .equals(other.getMessage())) return false;
    if (getAsyncMode()
        != other.getAsyncMode()) return false;
    if (!getHeadersList()
        .equals(other.getHeadersList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
    hash = (53 * hash) + getCluster().hashCode();
    hash = (37 * hash) + TOPIC_FIELD_NUMBER;
    hash = (53 * hash) + getTopic().hashCode();
    hash = (37 * hash) + KEY_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getKeyValue().hashCode();
    hash = (37 * hash) + KEY_UNDEFINED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getKeyUndefined());
    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
    hash = (53 * hash) + getMessage().hashCode();
    hash = (37 * hash) + ASYNC_MODE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAsyncMode());
    if (getHeadersCount() > 0) {
      hash = (37 * hash) + HEADERS_FIELD_NUMBER;
      hash = (53 * hash) + getHeadersList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static mailgun.kafkapixy.ProdRq parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static mailgun.kafkapixy.ProdRq parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ProdRq parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static mailgun.kafkapixy.ProdRq parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(mailgun.kafkapixy.ProdRq prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ProdRq}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ProdRq)
      mailgun.kafkapixy.ProdRqOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ProdRq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ProdRq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              mailgun.kafkapixy.ProdRq.class, mailgun.kafkapixy.ProdRq.Builder.class);
    }

    // Construct using mailgun.kafkapixy.ProdRq.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getHeadersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cluster_ = "";

      topic_ = "";

      keyValue_ = com.google.protobuf.ByteString.EMPTY;

      keyUndefined_ = false;

      message_ = com.google.protobuf.ByteString.EMPTY;

      asyncMode_ = false;

      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        headersBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return mailgun.kafkapixy.KafkaPixyProto.internal_static_ProdRq_descriptor;
    }

    @java.lang.Override
    public mailgun.kafkapixy.ProdRq getDefaultInstanceForType() {
      return mailgun.kafkapixy.ProdRq.getDefaultInstance();
    }

    @java.lang.Override
    public mailgun.kafkapixy.ProdRq build() {
      mailgun.kafkapixy.ProdRq result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public mailgun.kafkapixy.ProdRq buildPartial() {
      mailgun.kafkapixy.ProdRq result = new mailgun.kafkapixy.ProdRq(this);
      int from_bitField0_ = bitField0_;
      result.cluster_ = cluster_;
      result.topic_ = topic_;
      result.keyValue_ = keyValue_;
      result.keyUndefined_ = keyUndefined_;
      result.message_ = message_;
      result.asyncMode_ = asyncMode_;
      if (headersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          headers_ = java.util.Collections.unmodifiableList(headers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.headers_ = headers_;
      } else {
        result.headers_ = headersBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof mailgun.kafkapixy.ProdRq) {
        return mergeFrom((mailgun.kafkapixy.ProdRq)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(mailgun.kafkapixy.ProdRq other) {
      if (other == mailgun.kafkapixy.ProdRq.getDefaultInstance()) return this;
      if (!other.getCluster().isEmpty()) {
        cluster_ = other.cluster_;
        onChanged();
      }
      if (!other.getTopic().isEmpty()) {
        topic_ = other.topic_;
        onChanged();
      }
      if (other.getKeyValue() != com.google.protobuf.ByteString.EMPTY) {
        setKeyValue(other.getKeyValue());
      }
      if (other.getKeyUndefined() != false) {
        setKeyUndefined(other.getKeyUndefined());
      }
      if (other.getMessage() != com.google.protobuf.ByteString.EMPTY) {
        setMessage(other.getMessage());
      }
      if (other.getAsyncMode() != false) {
        setAsyncMode(other.getAsyncMode());
      }
      if (headersBuilder_ == null) {
        if (!other.headers_.isEmpty()) {
          if (headers_.isEmpty()) {
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHeadersIsMutable();
            headers_.addAll(other.headers_);
          }
          onChanged();
        }
      } else {
        if (!other.headers_.isEmpty()) {
          if (headersBuilder_.isEmpty()) {
            headersBuilder_.dispose();
            headersBuilder_ = null;
            headers_ = other.headers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            headersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHeadersFieldBuilder() : null;
          } else {
            headersBuilder_.addAllMessages(other.headers_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      mailgun.kafkapixy.ProdRq parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (mailgun.kafkapixy.ProdRq) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object cluster_ = "";
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return The cluster.
     */
    public java.lang.String getCluster() {
      java.lang.Object ref = cluster_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cluster_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return The bytes for cluster.
     */
    public com.google.protobuf.ByteString
        getClusterBytes() {
      java.lang.Object ref = cluster_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @param value The cluster to set.
     * @return This builder for chaining.
     */
    public Builder setCluster(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cluster_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCluster() {
      
      cluster_ = getDefaultInstance().getCluster();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a Kafka cluster to operate on.
     * </pre>
     *
     * <code>string cluster = 1;</code>
     * @param value The bytes for cluster to set.
     * @return This builder for chaining.
     */
    public Builder setClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cluster_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object topic_ = "";
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The topic.
     */
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return The bytes for topic.
     */
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @param value The topic to set.
     * @return This builder for chaining.
     */
    public Builder setTopic(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      topic_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTopic() {
      
      topic_ = getDefaultInstance().getTopic();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of a topic to produce to.
     * </pre>
     *
     * <code>string topic = 2;</code>
     * @param value The bytes for topic to set.
     * @return This builder for chaining.
     */
    public Builder setTopicBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      topic_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString keyValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Hash of the key is used to determine the partition to produce to. By
     * default it is an empty array which is a valid key, unless key_undefined
     * is set to true and then a random partition is selected.
     * </pre>
     *
     * <code>bytes key_value = 3;</code>
     * @return The keyValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyValue() {
      return keyValue_;
    }
    /**
     * <pre>
     * Hash of the key is used to determine the partition to produce to. By
     * default it is an empty array which is a valid key, unless key_undefined
     * is set to true and then a random partition is selected.
     * </pre>
     *
     * <code>bytes key_value = 3;</code>
     * @param value The keyValue to set.
     * @return This builder for chaining.
     */
    public Builder setKeyValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Hash of the key is used to determine the partition to produce to. By
     * default it is an empty array which is a valid key, unless key_undefined
     * is set to true and then a random partition is selected.
     * </pre>
     *
     * <code>bytes key_value = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyValue() {
      
      keyValue_ = getDefaultInstance().getKeyValue();
      onChanged();
      return this;
    }

    private boolean keyUndefined_ ;
    /**
     * <pre>
     * If true then the message is written to a random partition, otherwise
     * hash of key_value is used to determine the partition.
     * </pre>
     *
     * <code>bool key_undefined = 4;</code>
     * @return The keyUndefined.
     */
    @java.lang.Override
    public boolean getKeyUndefined() {
      return keyUndefined_;
    }
    /**
     * <pre>
     * If true then the message is written to a random partition, otherwise
     * hash of key_value is used to determine the partition.
     * </pre>
     *
     * <code>bool key_undefined = 4;</code>
     * @param value The keyUndefined to set.
     * @return This builder for chaining.
     */
    public Builder setKeyUndefined(boolean value) {
      
      keyUndefined_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true then the message is written to a random partition, otherwise
     * hash of key_value is used to determine the partition.
     * </pre>
     *
     * <code>bool key_undefined = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyUndefined() {
      
      keyUndefined_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Message body.
     * </pre>
     *
     * <code>bytes message = 5;</code>
     * @return The message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getMessage() {
      return message_;
    }
    /**
     * <pre>
     * Message body.
     * </pre>
     *
     * <code>bytes message = 5;</code>
     * @param value The message to set.
     * @return This builder for chaining.
     */
    public Builder setMessage(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      message_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Message body.
     * </pre>
     *
     * <code>bytes message = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
      onChanged();
      return this;
    }

    private boolean asyncMode_ ;
    /**
     * <pre>
     * If true then the method returns immediately after Kafka-Pixy gets the
     * produce request, and the message is written to Kafka asynchronously.
     * In that case partition and offset returned in response should be ignored.
     * If false, then a response is returned in accordance with the
     * producer.required_acks parameter, that can be one of:
     *  * no_response:    the response is returned as soon as a produce request
     *                    is delivered to a partition leader Kafka broker.
     *  * wait_for_local: the response is returned as soon as data is written
     *                    to the disk by a partition leader Kafka broker.
     *  * wait_for_all:   the response is returned after all in-sync replicas
     *                    have data committed to disk.
     * </pre>
     *
     * <code>bool async_mode = 6;</code>
     * @return The asyncMode.
     */
    @java.lang.Override
    public boolean getAsyncMode() {
      return asyncMode_;
    }
    /**
     * <pre>
     * If true then the method returns immediately after Kafka-Pixy gets the
     * produce request, and the message is written to Kafka asynchronously.
     * In that case partition and offset returned in response should be ignored.
     * If false, then a response is returned in accordance with the
     * producer.required_acks parameter, that can be one of:
     *  * no_response:    the response is returned as soon as a produce request
     *                    is delivered to a partition leader Kafka broker.
     *  * wait_for_local: the response is returned as soon as data is written
     *                    to the disk by a partition leader Kafka broker.
     *  * wait_for_all:   the response is returned after all in-sync replicas
     *                    have data committed to disk.
     * </pre>
     *
     * <code>bool async_mode = 6;</code>
     * @param value The asyncMode to set.
     * @return This builder for chaining.
     */
    public Builder setAsyncMode(boolean value) {
      
      asyncMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true then the method returns immediately after Kafka-Pixy gets the
     * produce request, and the message is written to Kafka asynchronously.
     * In that case partition and offset returned in response should be ignored.
     * If false, then a response is returned in accordance with the
     * producer.required_acks parameter, that can be one of:
     *  * no_response:    the response is returned as soon as a produce request
     *                    is delivered to a partition leader Kafka broker.
     *  * wait_for_local: the response is returned as soon as data is written
     *                    to the disk by a partition leader Kafka broker.
     *  * wait_for_all:   the response is returned after all in-sync replicas
     *                    have data committed to disk.
     * </pre>
     *
     * <code>bool async_mode = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearAsyncMode() {
      
      asyncMode_ = false;
      onChanged();
      return this;
    }

    private java.util.List<mailgun.kafkapixy.RecordHeader> headers_ =
      java.util.Collections.emptyList();
    private void ensureHeadersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        headers_ = new java.util.ArrayList<mailgun.kafkapixy.RecordHeader>(headers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        mailgun.kafkapixy.RecordHeader, mailgun.kafkapixy.RecordHeader.Builder, mailgun.kafkapixy.RecordHeaderOrBuilder> headersBuilder_;

    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public java.util.List<mailgun.kafkapixy.RecordHeader> getHeadersList() {
      if (headersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(headers_);
      } else {
        return headersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public int getHeadersCount() {
      if (headersBuilder_ == null) {
        return headers_.size();
      } else {
        return headersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public mailgun.kafkapixy.RecordHeader getHeaders(int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);
      } else {
        return headersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder setHeaders(
        int index, mailgun.kafkapixy.RecordHeader value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.set(index, value);
        onChanged();
      } else {
        headersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder setHeaders(
        int index, mailgun.kafkapixy.RecordHeader.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.set(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder addHeaders(mailgun.kafkapixy.RecordHeader value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(value);
        onChanged();
      } else {
        headersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder addHeaders(
        int index, mailgun.kafkapixy.RecordHeader value) {
      if (headersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHeadersIsMutable();
        headers_.add(index, value);
        onChanged();
      } else {
        headersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder addHeaders(
        mailgun.kafkapixy.RecordHeader.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder addHeaders(
        int index, mailgun.kafkapixy.RecordHeader.Builder builderForValue) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.add(index, builderForValue.build());
        onChanged();
      } else {
        headersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder addAllHeaders(
        java.lang.Iterable<? extends mailgun.kafkapixy.RecordHeader> values) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, headers_);
        onChanged();
      } else {
        headersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder clearHeaders() {
      if (headersBuilder_ == null) {
        headers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        headersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public Builder removeHeaders(int index) {
      if (headersBuilder_ == null) {
        ensureHeadersIsMutable();
        headers_.remove(index);
        onChanged();
      } else {
        headersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public mailgun.kafkapixy.RecordHeader.Builder getHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public mailgun.kafkapixy.RecordHeaderOrBuilder getHeadersOrBuilder(
        int index) {
      if (headersBuilder_ == null) {
        return headers_.get(index);  } else {
        return headersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public java.util.List<? extends mailgun.kafkapixy.RecordHeaderOrBuilder> 
         getHeadersOrBuilderList() {
      if (headersBuilder_ != null) {
        return headersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(headers_);
      }
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public mailgun.kafkapixy.RecordHeader.Builder addHeadersBuilder() {
      return getHeadersFieldBuilder().addBuilder(
          mailgun.kafkapixy.RecordHeader.getDefaultInstance());
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public mailgun.kafkapixy.RecordHeader.Builder addHeadersBuilder(
        int index) {
      return getHeadersFieldBuilder().addBuilder(
          index, mailgun.kafkapixy.RecordHeader.getDefaultInstance());
    }
    /**
     * <pre>
     * Headers to include with the published message
     * </pre>
     *
     * <code>repeated .RecordHeader headers = 7;</code>
     */
    public java.util.List<mailgun.kafkapixy.RecordHeader.Builder> 
         getHeadersBuilderList() {
      return getHeadersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        mailgun.kafkapixy.RecordHeader, mailgun.kafkapixy.RecordHeader.Builder, mailgun.kafkapixy.RecordHeaderOrBuilder> 
        getHeadersFieldBuilder() {
      if (headersBuilder_ == null) {
        headersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            mailgun.kafkapixy.RecordHeader, mailgun.kafkapixy.RecordHeader.Builder, mailgun.kafkapixy.RecordHeaderOrBuilder>(
                headers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        headers_ = null;
      }
      return headersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ProdRq)
  }

  // @@protoc_insertion_point(class_scope:ProdRq)
  private static final mailgun.kafkapixy.ProdRq DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new mailgun.kafkapixy.ProdRq();
  }

  public static mailgun.kafkapixy.ProdRq getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProdRq>
      PARSER = new com.google.protobuf.AbstractParser<ProdRq>() {
    @java.lang.Override
    public ProdRq parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ProdRq(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProdRq> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProdRq> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public mailgun.kafkapixy.ProdRq getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

