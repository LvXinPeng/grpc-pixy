// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafkapixy.proto

package com.csvw.lib;

public interface PartitionOffsetOrBuilder extends
    // @@protoc_insertion_point(interface_extends:PartitionOffset)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The Partition this structure describes
   * </pre>
   *
   * <code>int32 partition = 1;</code>
   * @return The partition.
   */
  int getPartition();

  /**
   * <pre>
   * The beginning offset
   * </pre>
   *
   * <code>int64 begin = 2;</code>
   * @return The begin.
   */
  long getBegin();

  /**
   * <pre>
   * The ending offset
   * </pre>
   *
   * <code>int64 end = 3;</code>
   * @return The end.
   */
  long getEnd();

  /**
   * <pre>
   * The number of messages in the partition
   * </pre>
   *
   * <code>int64 count = 4;</code>
   * @return The count.
   */
  long getCount();

  /**
   * <pre>
   * Offset in the partition
   * </pre>
   *
   * <code>int64 offset = 5;</code>
   * @return The offset.
   */
  long getOffset();

  /**
   * <pre>
   * The number of un-consumed messages in the partition
   * </pre>
   *
   * <code>int64 lag = 6;</code>
   * @return The lag.
   */
  long getLag();

  /**
   * <pre>
   * Metatdata associated with the partition
   * </pre>
   *
   * <code>string metadata = 7;</code>
   * @return The metadata.
   */
  String getMetadata();
  /**
   * <pre>
   * Metatdata associated with the partition
   * </pre>
   *
   * <code>string metadata = 7;</code>
   * @return The bytes for metadata.
   */
  com.google.protobuf.ByteString
      getMetadataBytes();

  /**
   * <pre>
   * human readable representation of sparsely committed ranges
   * </pre>
   *
   * <code>string sparse_acks = 8;</code>
   * @return The sparseAcks.
   */
  String getSparseAcks();
  /**
   * <pre>
   * human readable representation of sparsely committed ranges
   * </pre>
   *
   * <code>string sparse_acks = 8;</code>
   * @return The bytes for sparseAcks.
   */
  com.google.protobuf.ByteString
      getSparseAcksBytes();
}
