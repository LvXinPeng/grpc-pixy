// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafkapixy.proto

package com.csvw.lib;

public interface ConsRsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ConsRs)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Partition the message was read from.
   * </pre>
   *
   * <code>int32 partition = 1;</code>
   * @return The partition.
   */
  int getPartition();

  /**
   * <pre>
   * Offset of the read message in the partition.
   * </pre>
   *
   * <code>int64 offset = 2;</code>
   * @return The offset.
   */
  long getOffset();

  /**
   * <pre>
   * Key that was used to produce the message, unless key_undefined is true,
   * then it is undefined.
   * </pre>
   *
   * <code>bytes key_value = 3;</code>
   * @return The keyValue.
   */
  com.google.protobuf.ByteString getKeyValue();

  /**
   * <pre>
   * If true then the message was produced to a random partition.
   * </pre>
   *
   * <code>bool key_undefined = 4;</code>
   * @return The keyUndefined.
   */
  boolean getKeyUndefined();

  /**
   * <pre>
   * Message body
   * </pre>
   *
   * <code>bytes message = 5;</code>
   * @return The message.
   */
  com.google.protobuf.ByteString getMessage();

  /**
   * <pre>
   * Headers associated with the message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 6;</code>
   */
  java.util.List<RecordHeader>
      getHeadersList();
  /**
   * <pre>
   * Headers associated with the message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 6;</code>
   */
  RecordHeader getHeaders(int index);
  /**
   * <pre>
   * Headers associated with the message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 6;</code>
   */
  int getHeadersCount();
  /**
   * <pre>
   * Headers associated with the message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 6;</code>
   */
  java.util.List<? extends RecordHeaderOrBuilder>
      getHeadersOrBuilderList();
  /**
   * <pre>
   * Headers associated with the message
   * </pre>
   *
   * <code>repeated .RecordHeader headers = 6;</code>
   */
  RecordHeaderOrBuilder getHeadersOrBuilder(
          int index);
}
